#!/bin/bash
# 先安装MapReduce V1  后期 进行YARN的安装

# 务必删除本机所有mysql，注意数据的备份
# 务必安装redhat-lsb，可以使用 yum install -y redhat-lsb

# import temp variable and function
source ./utils
construct_soft_dict

MASTER_HOST=`hostname`
HELP=false
CUSTOM_FILE=""
datanodes=""

show_usage(){
  cat <<EOF

  usage: $0 OPTIONS

  OPTIONS CAN BE:
  SPECIFY THE DATANODE
  	 $0 {-n|--nodes} [datanode list] 
	 The datanode list should be separated by ',', seems like host1,host2,host3

  USE FILE TO SPECIFY THE DATANODE AND NAMENODE
  	 $0 {-f|--nodes-file} [filepath]

  The file format must be like following:
  	 eg:
  	 # file specify the datanodes and the second-namenode
	 datanodes:
	 esen-petabase-234,esen-petabase-235
	 second-name-node:
	 esen-petabase-234
         DON'T forget the ":" ! And the last 's' after 'datanodes'
	 You NEEDN'T specify the second-name-node in the file current, but later when you use petabase-deploy,you MUST do

  SHOW THIS HELP
  	 $0 {-h|--help} 


  e.g. $0  -n esen-petabase-234,esen-petabase-235 
  e.g. $0  -f your_datanode_list_file

EOF
exit 1
}




show_mysql_hint()
{
  wecho "安装过程中会要求您设置mysql的密码，请设置密码并务必记住这个密码"
  wecho "务必允许 root 用户远程登录访问mysql，即"
  wecho "Disallow root login remotely?"
  wecho "请选择'N'"
}


# not use now
install_necessary_soft_namenode()
{

  for rpm_file in $NESS_SOFT_DIR/*.rpm
    do
    check_and_install_local $rpm_file
    if [ $? -ne 0 ];then
      return 1
    fi
  done
}


# not use now
install_necessary_soft_datanodes()
{
  for host in ${datanodes[@]}; do
    echo "[Log] $host 启动预安装"

  for rpm_file in $NESS_SOFT_DIR/*.rpm
    do
    check_and_install_remote $host $rpm_file
    if [ $? -ne 0 ];then
      return 1
    fi
    done
 done

}




# 现在把Hadoop 放到了necessary软件中，也就是说uninstall的时候不会删除
check_and_install_necessary_namenode_from_rpm_list()
{
  iecho "开始在namenode上面安装必备组件"
  for key in ${!NESS_SOFT_DICT[@]};do
    check_install_local ${key}
    if [ $? -eq 0 ]; then
      local installed_pkg_name=`rpm -q ${key}`
      local pkgname=`basename ${NESS_SOFT_DICT[${key}]} .rpm`
      if [ ${installed_pkg_name}x = ${pkgname}x  ];then
   	iecho "已经安装${installed_pkg_name}，不需要再次安装"
      else
        wecho "已经安装了不同版本的包${installed_pkg_name},正尝试升级..."
	rpm -U ${NESS_SOFT_DIR}/${NESS_SOFT_DICT[${key}]} 2>&1 |grep "which is newer" 1>/dev/null 2>&1
	if [ $? == 0 ];then
	  iecho "本机的${key}版本更新，无需升级"
	else
	  echo "升级本机${key}成功"
	fi
      fi
     else
      install_soft_local ${NESS_SOFT_DIR}/${NESS_SOFT_DICT[${key}]}
      if [ $? -ne 0 ]; then
        eecho "在本机安装${pkgname}失败，请检查相关日志"
        return 1
      fi
    fi
  done

  return 0
}




# you'd better not do this, remove openssl will break you OS
uninstall_necessary_soft_namenode()
{
  echo "uninstall necessary in namenode"
#  for rpm_file in $NESS_SOFT_DIR/*.rpm
#    do
#      pkgname=`basename $rpm_file .rpm`
#      echo "uninstalling $pkgname"
#      rpm -e --nodeps ${pkgname} 1>/dev/null 2>&1
#      if [ $? -ne 0 ];then
#        eecho "Unable to uninstall ${pkgname} on $MASTER_HOST"
#      fi
#  done
}


# you'd better not do this, remove openssl will break you OS
uninstall_necessary_soft_datanodes()
{
  echo "uninstall necessary in namenode"
#  for host in ${datanodes[@]}; do
#    for rpm_file in $NESS_SOFT_DIR/*.rpm
#      do 
#        pkgname=`basename $rpm_file .rpm`
#        echo "uninstalling $pkgname on $host"
#        ssh   $host    "rpm -e --nodeps ${pkgname} 1>/dev/null 2>&1"
#        if [ $? -ne 0 ];then
#          eecho "Unable to uninstall ${pkgname} to $host"
#        fi
#      done
#  done
}


install_mysql()
{

  rpm -Uvh --replacefiles --force  $MYSQL_SOFT_DIR/mysql-community-common-5.6.23-2.el6.x86_64.rpm
      if [ $? -ne 0 ];then
        eecho "无法安装 $mysql-community-common to $MASTER_HOST,请检查是不是先前版本的mysql没有删除干净，或者已经运行了本预安装程序"
      fi
      
  rpm -ivh --replacefiles --force   $MYSQL_SOFT_DIR/mysql-community-libs-5.6.23-2.el6.x86_64.rpm
      if [ $? -ne 0 ];then
        eecho "无法安装 $mysql-community-libs to $MASTER_HOST,请检查是不是先前版本的mysql没有删除干净，或者已经运行了本预安装程序"
      fi

  rpm -Uvh --replacefiles --force   $MYSQL_SOFT_DIR/mysql-community-client-5.6.23-2.el6.x86_64.rpm
      if [ $? -ne 0 ];then
        eecho "无法安装 $mysql-community-client to $MASTER_HOST,请检查是不是先前版本的mysql没有删除干净，或者已经运行了本预安装程序"
      fi

  rpm -Uvh --replacefiles --force   $MYSQL_SOFT_DIR/perl-DBI-1.609-4.el6.x86_64.rpm
      if [ $? -ne 0 ];then
        eecho "无法安装 $mysql-community-perl-DBI to $MASTER_HOST,请检查是不是先前版本的mysql没有删除干净，或者已经运行了本预安装程序"
      fi

  rpm -Uvh --replacefiles --force   $MYSQL_SOFT_DIR/mysql-community-server-5.6.23-2.el6.x86_64.rpm
      if [ $? -ne 0 ];then
        eecho "无法安装 $mysql-community-server to $MASTER_HOST,请检查是不是先前版本的mysql没有删除干净，或者已经运行了本预安装程序"
      fi
}


configure_mysql()
{
  iecho "即将配置 MySQL Server，请您完成相关设置..."
  sleep 3
  service mysqld start
  chkconfig mysqld on
  sleep 7
  /usr/bin/mysql_secure_installation

}

uninstall_mysql()
{
  rpm -e mysql-community-server-5.6.23-2.el6.x86_64
      if [ $? -ne 0 ];then
        eecho "无法删除 $MASTER_HOST 上的 mysql-community-server"
      fi
  rpm -e mysql-community-client-5.6.23-2.el6.x86_64
      if [ $? -ne 0 ];then
        eecho "无法删除 $MASTER_HOST 上的 mysql-community-client"
      fi
  rpm -e mysql-community-libs-5.6.23-2.el6.x86_64
      if [ $? -ne 0 ];then
        eecho "无法删除 $MASTER_HOST 上的 mysql-community-libs"
      fi
  rpm -e mysql-community-common-5.6.23-2.el6.x86_64
      if [ $? -ne 0 ];then
        eecho "无法删除 $MASTER_HOST 上的 mysql-community-common"
      fi
  rpm -e perl-DBI-1.609-4.el6.x86_64
      if [ $? -ne 0 ];then
        eecho "无法删除 $MASTER_HOST 上的 mysql-community-perl-DBI"
      fi

  #删除数据
  rm -rf /var/lib/mysql
  #删除表
  rm -f /etc/my.cnf
}



configure_selinux()
{
  cp selinux_config /etc/selinux/config
  setenforce 0
}



check_install_mysql()
{
  rpm -qa |grep -i mysql |grep -v mysql-libs 1>/dev/null 2>&1
  if [ $? = 0 ];then
    wecho "本机存在已经安装的mysql，请在备份数据后删除，然后再运行本预安装程序"
    echo "您可以使用 'rpm -qa |grep -i mysql' 来查找已经安装的mysql包"
    echo "并使用rpm -e --nodeps <package_name> 来卸载该包"
    echo "建议卸载除mysql-libs 之外的所有包"
    exit 1
  else
    return 0
  fi
}



arg_check()
{
  if [[ -z "${datanodes}" ]];then
    wecho "请指定从机列表"
    return 1
  fi

}


#############################################################################

perm_check

TEMP=`getopt -o n:s:f:hz:: -l nodes:,secondary-namenode:,nodes-file:,help,z-long \
     -n '错误的输入参数' -- "$@" `

if [ $? != 0 ] ; then echo "退出..." >&2 ; exit 1 ; fi

eval set -- "$TEMP"


while true ; do
  case "$1" in
# c 和 h 选项是没有参数的，如果使用了$2，会直接取下一个参数
     -n|--nodes) 
       IFS=','; datanodes=$2;
       shift 2 ;;

     -f|--nodes-file) 
       CUSTOM_FILE=$2;
       if [ ! -r $CUSTOM_FILE ];then
         wecho "文件 ${CUSTOM_FILE} 不存在或者不可读"
	 exit 1
       fi
       while read LINE
       do
	 if [ ${LINE}x = "datanodes:"x ];then
	 read LINE
         IFS=','; datanodes=$LINE;
	 fi
	 done  <${CUSTOM_FILE}
       shift 2 ;;

     -h|--help)  
       HELP="true";  
       shift ;;

 # 这里预留一个可选参数的使用方法，方便扩展
 #z has an optional argument. As we are in quoted mode,
 #an empty parameter will be generated if its optional
 #argument is not found.
       -z|--z-long)
       case "$2" in
       "") echo "Option $1, no argument"; shift 2 ;;
       *)  echo "Option $1's argument is $2" ; shift 2 ;;
       esac ;;
     --) shift ; break ;;
     *) echo "Internal error!" ; exit 1 ;;
  esac
done

if [ "${HELP}" = "true" ];then
show_usage
exit 0
fi


arg_check
if [ $? = 1 ];then
  exit 1
fi


test_connect_datanode "${datanodes}"

echo "`date +%Y-%m-%d-%T`开始预安装"

ssh_auth "${datanodes}"

check_install_redhat-lsb_namenode 
check_install_redhat-lsb_datanode "${datanodes}"

# 不需要检查 初始系统会默认安装一个mysql-libs，如果卸载，会缺少一个so的依赖，直接--force安装mysql相关组件即可，之后yum check dependencies不会有问题
# #check_install_mysql

sync_esen_software "${datanodes}"

set_time_zone_namenode 
set_time_zone_datanode "${datanodes}"


check_and_install_necessary_namenode_from_rpm_list

if [ $? -ne 0 ];then
 eecho "主机上安装必要软件失败，退出"
 exit 1
fi

check_and_install_lxml_namenode_from_rpm_list
#install_necessary_soft_namenode

if [ $? -ne 0 ];then
 eecho "主机上安装lxml相关软件失败，退出"
 exit 1
fi

check_and_install_necessary_datanode_from_rpm_list "${datanodes}"
#install_necessary_soft_datanodes
if [ $? -ne 0 ];then
 eecho "从机上安装必要软件失败，退出"
 exit 1
fi

install_mysql

show_mysql_hint
configure_mysql

configure_iptables_namenode 
configure_iptables_datanode  "${datanodes}"

configure_selinux

 #for test script never use
 #uninstall_mysql

 # Don't do following， remove openssl is very dangerous
 #**uninstall_necessary_soft_namenode
 #**uninstall_necessary_soft_datanodes

iecho "`date +%Y-%m-%d-%T` 完成"
